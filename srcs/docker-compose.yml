version: '3.8'
services:

  certbot:
    image: certbot/certbot
    volumes:
      - ./proxy/cert/conf:/etc/letsencrypt
      - ./proxy/cert/www:/var/www/certbot
  backend:
    build:
      context: backend
      target: ${ENV}
      args:
        - POSTGRES_HOST
        - POSTGRES_PORT
        - POSTGRES_USERNAME
        - POSTGRES_PASSWORD
        - POSTGRES_NAME
        - JWT_SECRET
        - DATABASE_URL
    restart: always
    container_name: backend
    volumes:
      - "./backend/:/app"
    ports:
      - 4000:4000
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:15.3
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_NAME=${POSTGRES_NAME}
    restart: always
    user: postgres
    container_name: db
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432

  frontend:
    build:
      context: frontend
      target: ${ENV}
    environment:
      - REACT_APP_FRONTEND_URL=${REACT_APP_FRONTEND_URL}
      - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
      - REACT_APP_FORTYTWO_APP_ID=${REACT_APP_FORTYTWO_APP_ID}
      - REACT_APP_GITHUB_LINK=${REACT_APP_GITHUB_LINK}
    restart: always
    container_name: frontend
    volumes:
      - "./frontend/:/app"
      - "../build/frontend/:/app/build"
    depends_on:
      - backend

  proxy:
    volumes:
      - ./proxy/cert/:/etc/letsencrypt
    build:
      context: proxy
      target: ${ENV}
    restart: always
    container_name: proxy
    ports:
      - 80:80
      - 443:443
    env_file:
      - .env
    depends_on:
      - backend
      - frontend

volumes:
  db_data:
